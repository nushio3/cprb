Cprb is a C Preprocessor in Ruby flavor, written in Haskell.


#### philosophy of Cprb:

1. C preprocessor is poor. This is the origin of suffering.
2. Then why not use a better language.
3. minimum implementation cost
4. use in emacs c++-mode


#### rules for Cprb:

Program of Cprb looks like a legal C program. But after some minor editing, it
is first interpreted and run as a Ruby program. The standard output of the run
becomes a C program. A Cprb program has Ruby region and C region. It starts
from a Ruby region, and switches into C region by quoting comments.

"*/

/*"


"*/ is changed into <<UNIQUETAG and /*" to UNIQUETAG. Some special
rules apply between "*/ and /*" :

- (n) repeated occurence of \ is mapped to (2n) repeat
- if some letters are after "*/ or before /*", newline is inserted.
- if only spaces are before /*", they get truncated.

Commented and uncommented letters in C region get quoted. Commented letters in
Ruby region become part of the ruby program. Uncommented letters in Ruby
region are ignored.


#### how to build:

Cprb needs Haskell and Ruby. An easy way to prepare Haskell environment is to
install The Haskell Platform:

    http://hackage.haskell.org/platform/


You can install Ruby from your package manager, or from Ruby Website:

    http://www.ruby-lang.org/en/


Then download and compile Cprb by

    $ git clone https://github.com/nushio3/cprb.git
    $ cd cprb
    $ make


#### usage:

Usage: cprb [OPTION...] files...
           --keep              keep intermediate files that are generated during
                               internal preprocessing steps.
  -o file  --output-file=file  specify name and location of the output file.
                               Default output filename is input filename with
                               'rb' removed from the extension;for example,
                               'cprb foo.cpprb' generates 'foo.cpp'
